/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/xvjGrlOKOpa
 */
import Link from "next/link";
import { Label } from "@/components/ui/label";
import { Input } from "@/components/ui/input";
import { Textarea } from "@/components/ui/textarea";
import { Button } from "@/components/ui/button";

import { CopilotTextarea } from "@copilotkit/react-textarea";
import {
  DocumentPointer,
  useCopilotReadable,
  useMakeCopilotDocumentReadable,
} from "@copilotkit/react-core";
import { useState } from "react";
import { EmailBodyTextarea } from "./email-body";
import { callSummary } from "@/app/misc/callSummary";
import { EmailSubjectTextarea } from "./email-subject";

export function CrmPage() {
  const [emailSubject, setEmailSubject] = useState("");
  const [emailBody, setEmailBody] = useState("");

  useCopilotReadable({
    description: "Call summary",
    value: callSummary,
    categories: [salesReplyCategoryId],
  });
  useMakeCopilotDocumentReadable(
    clientTranscriptSummaryDocument,
    [salesReplyCategoryId],
    []
  );

  return (
    <div className="grid min-h-screen w-full lg:grid-cols-[280px_1fr] pr-20">
      <div className="hidden border-r bg-gray-100/40 lg:block dark:bg-gray-800/40">
        <div className="flex h-full max-h-screen flex-col gap-2">
          <div className="flex h-[60px] items-center border-b px-6">
            <Link className="flex items-center gap-2 font-semibold" href="#">
              <UserIcon className="h-6 w-6" />
              <span className="">Customer Info</span>
            </Link>
          </div>
          <div className="flex-1 overflow-auto py-2">
            <div className="px-4">
              <h2 className="text-lg font-bold">
                Robert Masters & Sarah Smith
              </h2>
              <p className="text-sm text-gray-500 dark:text-gray-400">
                rmasters@ppnw.com
              </p>
              <p className="text-sm text-gray-500 dark:text-gray-400">
                ssmith@ppnw.com
              </p>
              <p className="text-sm text-gray-500 dark:text-gray-400">
                +1 (123) 456-7890
              </p>
              <h3 className="text-lg font-bold mt-4">Previous Interactions</h3>
              <p className="text-sm text-gray-500 dark:text-gray-400">
                Called on 12/01/2024
              </p>
              <p className="text-sm text-gray-500 dark:text-gray-400">
                Emailed on 11/01/2024
              </p>
              <p className="text-sm text-gray-500 dark:text-gray-400">
                Met in person on 10/01/2024
              </p>
            </div>
          </div>
        </div>
      </div>
      <div className="flex flex-col">
        <header className="flex h-14 lg:h-[60px] items-center gap-4 border-b bg-gray-100/40 px-6 dark:bg-gray-800/40">
          <Link className="lg:hidden" href="#">
            <UserIcon className="h-6 w-6" />
            <span className="sr-only">Customer Info</span>
          </Link>
          <div className="w-full flex-1">
            <h1 className="font-semibold text-lg md:text-2xl">Compose Email</h1>
          </div>
        </header>
        <main className="flex flex-1 flex-col gap-4 p-4 md:gap-8 md:p-6">
          <div className="space-y-4">
            <div className="space-y-2">
              <Label htmlFor="recipient">Recipient</Label>
              <Input defaultValue="johndoe@example.com" id="recipient" />
            </div>
            <div className="space-y-2">
              <Label htmlFor="subject">Subject</Label>
              <EmailSubjectTextarea
                emailSubject={emailSubject}
                setEmailSubject={setEmailSubject}
                salesReplyCategoryId={salesReplyCategoryId}
              />
            </div>
            <div className="space-y-2">
              <Label htmlFor="message">Message</Label>
              <EmailBodyTextarea
                emailBody={emailBody}
                setEmailBody={setEmailBody}
                salesReplyCategoryId={salesReplyCategoryId}
              />
            </div>
            <div className="space-y-2">
              <Label htmlFor="attachment">Attachment</Label>
              <Input id="attachment" type="file" />
            </div>
            <Button>Send Email</Button>
          </div>
        </main>
      </div>
    </div>
  );
}

function UserIcon(props: any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M19 21v-2a4 4 0 0 0-4-4H9a4 4 0 0 0-4 4v2" />
      <circle cx="12" cy="7" r="4" />
    </svg>
  );
}

const salesReplyCategoryId = "sales_reply";

const clientTranscriptSummaryDocument: DocumentPointer = {
  id: "clientTranscriptSummary",
  name: "Client Call Gong Transcript",
  sourceApplication: "Gong",
  iconImageUri:
    "https://asset.brandfetch.io/idHyhmcKvT/idRu6db2HA.jpeg?updated=1690987844207",
  getContents: () => {
    return callSummary;
  },
};
